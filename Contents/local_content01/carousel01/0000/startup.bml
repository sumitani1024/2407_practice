<?xml version="1.0" encoding="EUC-JP" ?>
<!DOCTYPE bml PUBLIC "+//ARIB STD-B24:1999//DTD BML Document//JA" "http://www.arib.or.jp/B24/DTD/bml_1_1.dtd">
<?bml bml-version="3.0" ?>
<bml>
	<head>
		<title>12seg startup.bml[TEMPLATE]</title>

		<link href="startup.css" />
		<script src = "functions.ecm"/>
		<script>
			<![CDATA[
			var timerID = NaN;
			var ES = me.substring(0,4);
			var MODULE = me.substring(4,8);

			function getData(id) { return g(id).firstChild.data; }
			function setUreg(index, data) { browser.Ureg[index] = data.toString(); }
			function readBtb(tbl, strac) {var result = new Array();var btb = new BinaryTable(tbl, strac);if (btb == null) return null;result = btb.toArray(0, btb.nrow);if (btb.nrow && (result != null && typeof(result[0][0]) == "object")) {for (var i=0; i<btb.nrow; i++) {for(var j=0; j<btb.ncolumn; j++) result[i][j] = result[i][j].valueOf();}}btb.close();return result;}
			function getKey() { return getEvent().keyCode; }
			function getEvent() { return document.currentEvent; }
			function sleep(i_val){browser.sleep(i_val);}

			function init(){
				debug = 1;

				updateModule();
				isRec();

				showInit();

				dbg("SetInterval開始");
				timerID = browser.setInterval("intervalSettings();", 2000,1);
				return;
			}

			function intervalSettings(){
				browser.clearTimer(timerID);
				timerID = NaN;
				dbg("SetInterval終了");
			}

			//共通
			var gStatusView = new Object();
			gStatusView.STATE_TOP = true;
			gStatusView.STATE_JOINHOW = false;
			gStatusView.STATE_PROFILE = false;
			gStatusView.STATE_REGI = false;
			gStatusView.STATE_URGE = false;

			var gStatusNum = 19;
			var moduleRef01 = ES + "0001";

			var firstShowFlag = true;

			function updateModule(){
				var ele = g("mu00");
				ele.moduleRef = ES + MODULE;
				ele.subscribe = true;

				var eleMu0001 = g("mu0001");
				eleMu0001.moduleRef = moduleRef01;
				eleMu0001.subscribe = true;

				var eleMl0001 = g("ml0001");
				eleMl0001.moduleRef = moduleRef01;
				eleMl0001.subscribe = true;
			}

			function showInit(){
				ml(moduleRef01, true);
				ml(moduleRef01, false);
			}

			// ボタン押下
			function kd()
			{
				var buttonKey = getKey();

				dbg( "番組ボタン押下: " + buttonKey);
				if(buttonKey == 21 || buttonKey == 22 || buttonKey == 23 || buttonKey == 24)
				{
					footerButtonChange(buttonKey);
				}else if(buttonKey == 19){
					dbg("timerID: " + timerID);
					if(!isNaN(timerID) ){
						browser.clearTimer(timerID);
						TimerID = NaN;
					}
					//todo: else ifでNHKトップへ戻る処理追加
					if(gStatusNum != 19){
						footerButtonChange(buttonKey);
					}else{
						//dbg( "NHKトップへ戻る");
						so("7");
						//gotoNHKTop();
					}
				}else if(changeRegiFlag){
					changeRegiInfo(buttonKey);
				}else if(buttonKey >= 1 && buttonKey <= 4){
					if(gStatusView.STATE_JOINHOW || gStatusView.STATE_PROFILE || gStatusView.STATE_URGE){
						controlArrowKey(buttonKey);
					}else if(gStatusView.STATE_REGI){
						controlFocusKey(buttonKey);
					}
				}else if(buttonKey == 18 && gStatusView.STATE_REGI){
					decRegiFocus();
				}
			}

			function footerButtonChange(key)
			{
				if(gStatusNum == key){
					dbg( "同ボタン押下");
					return;
				}

				sl("lock");
				//dbg(sll);
				footerButtonReturn();
				so("7");
				if(key == 21){
					v("button_blue_off",null);
					v("button_blue_on",1);

					gStatusView.STATE_JOINHOW = true;
					showJoinhow(gStatusView.STATE_JOINHOW);
				}else if(key == 22){
					v("button_red_off",null);
					v("button_red_on",1);

					gStatusView.STATE_PROFILE = true;
					showProf(gStatusView.STATE_PROFILE);
				}else if(key == 23){
					v("button_green_off",null);
					v("button_green_on",1);

					gStatusView.STATE_REGI = true;
					showRegi(gStatusView.STATE_REGI);
				}else if(key == 24){
					v("button_yellow_off",null);
					v("button_yellow_on",1);

					gStatusView.STATE_URGE = true;
					showNet(gStatusView.STATE_URGE);
				}else if(key == 19){
					gStatusView.STATE_TOP = true;
					showTop(gStatusView.STATE_TOP);
				}
				sl();

				gStatusNum = key;
			}

			function footerButtonReturn()
			{
				if(gStatusView.STATE_JOINHOW){
					v("button_blue_on",null);
					v("button_blue_off",1);

					gStatusView.STATE_JOINHOW = false;
					showJoinhow(gStatusView.STATE_JOINHOW);
				}else if(gStatusView.STATE_PROFILE){
					v("button_red_on",null);
					v("button_red_off",1);

					gStatusView.STATE_PROFILE = false;
					showProf(gStatusView.STATE_PROFILE);
				}else if(gStatusView.STATE_REGI){
					v("button_green_on",null);
					v("button_green_off",1);

					gStatusView.STATE_REGI = false;
					showRegi(gStatusView.STATE_REGI);
				}else if(gStatusView.STATE_URGE){
					v("button_yellow_on",null);
					v("button_yellow_off",1);

					gStatusView.STATE_URGE = false;
					showNet(gStatusView.STATE_URGE);
				}else if(gStatusView.STATE_TOP){
					v("button_back_housou",null);
					v("button_back_top",1);

					gStatusView.STATE_TOP = false;
					showTop(gStatusView.STATE_TOP);
				}
			}

			function refreshScene(){
				if(gStatusView.STATE_JOINHOW){
					showJoinhow(gStatusView.STATE_JOINHOW);
				}else if(gStatusView.STATE_PROFILE){
					showProf(gStatusView.STATE_PROFILE);
				}else if(gStatusView.STATE_REGI){
					showRegi(gStatusView.STATE_REGI);
				}else if(gStatusView.STATE_URGE){
					showNet(gStatusView.STATE_URGE);
				}else if(gStatusView.STATE_TOP){
					showTop(gStatusView.STATE_TOP);
				}
			}

			function showTop(flag){
				if(flag){
					v("button_back_top",1);
					v("button_back_housou",null);

					v("top_base",1);
					v("top_title_text",1);
					v("top_desc_text",1);
				}else{
					v("button_back_housou",1);
					v("button_back_top",null);

					v("top_base",null);
					v("top_title_text",null);
					v("top_desc_text",null);
				}
			}

			function showJoinhow(flag){
				if(flag){
					v("how_join_base",1);
					v("how_join_desc_text",1);
					v("how_join_page_text",1);
					joinhowPageChange();
				}else{
					v("how_join_base",null);
					v("how_join_desc_text",null);
					v("how_join_page_right",null);
					v("how_join_page_left",null);
					v("how_join_page_focus_right",null);
					v("how_join_page_text",null);
				}
			}

			function showProf(flag){
				if(flag){
					v("prof_base",1);
					v("prof_page_img",1);
					v("prof_desc_text",1);
					v("prof_page_text",1);
					profPageChange();
				}else{
					v("prof_base",null);
					v("prof_page_img",null);
					v("prof_desc_text",null);
					v("prof_page_right",null);
					v("prof_page_left",null);
					v("prof_page_focus",null);
					v("prof_page_text",null);
				}
			}

			function showRegi(flag){
				if(flag){
					getRegiNv();
					v("regi_base",1);
					v("regi_name_text",1);
					v("regi_enagy_text",1);
					v("regi_level_text",1);
					v("regi_age_text",1);
					v("regi_address_text",1);
					v("regi_button_reset",1);
					v("regi_button_change",1);
					v("regi_button_complete",1);
					v("regi_button_balloon",1);
					currentFocus = gRegi.focusName;
					gRegi.focusNum = 1;
					showInitRegiScene();
					showRegiFocus();
				}else{
					v("regi_base",null);
					v("regi_name_text",null);
					v("regi_enagy_text",null);
					v("regi_level_text",null);
					v("regi_age_text",null);
					v("regi_address_text",null);
					v("regi_button_reset",null);
					v("regi_button_change",null);
					v("regi_button_complete",null);
					v("regi_button_balloon",null);
					currentFocus = null;
					showRegiFocus();
					showRegiAgePullDown(false);
				}
			}

			function showNet(flag){
				if(flag){
					v("net_base",1);
					v("net_desc_text",1);
					v("net_page_text",1);
					netPageChange();
				}else{
					v("net_base",null);
					v("net_desc_text",null);
					v("net_page_right",null);
					v("net_page_left",null);
					v("net_page_focus",null);
					v("net_page_focus_left",null);
					v("net_page_text",null);
				}
			}

			var gRegi = new Object();
			gRegi.focusName = "regi_list_focus_top";
			gRegi.decName = "regi_list_decision_focus_top";
			gRegi.focusAge = "regi_list_focus_age";
			gRegi.decAge = "regi_list_decision_focus_age";
			gRegi.focusAddress = "regi_list_focus_address";
			gRegi.decAddress = "regi_list_decision_focus_address";
			gRegi.focusReset = "regi_button_left_focus";
			gRegi.decReset = "regi_button_left_decision";
			gRegi.focusChange = "regi_button_right_focus";
			gRegi.decChange = "regi_button_right_decision";
			gRegi.focusNum = 1;
			var currentFocus = gRegi.focusName;
			var beforeFocus = null;
			function showRegiFocus(){
				if(beforeFocus != null){
					v(beforeFocus,null);
					beforeFocus = null;
				}
				if(currentFocus != null){
					v(currentFocus,1);
					beforeFocus = currentFocus;
				}
			}

			function controlFocusKey(buttonNum){
				if(buttonNum == 1 && gRegi.focusNum != 1 && gRegi.focusNum != 5){
					gRegi.focusNum--;
					so("9");
				}else if(buttonNum == 2 && gRegi.focusNum != 4 && gRegi.focusNum != 5){
					gRegi.focusNum++;
					so("9");
				}
				else if(buttonNum == 3 && gRegi.focusNum == 4){
					gRegi.focusNum++;
					so("9");
				}else if(buttonNum == 4 && gRegi.focusNum == 5){
					gRegi.focusNum--;
					so("9");
				}else{
					return;
				}

				regiFocus();
				showRegiFocus();
			}

			function regiFocus(){
				if(gRegi.focusNum == 1){
					currentFocus = gRegi.focusName;
				}else if(gRegi.focusNum == 2){
					currentFocus = gRegi.focusAge;
				}else if(gRegi.focusNum == 3){
					currentFocus = gRegi.focusAddress;
				}else if(gRegi.focusNum == 4){
					currentFocus = gRegi.focusChange;
				}else if(gRegi.focusNum == 5){
					currentFocus = gRegi.focusReset;
				}
			}

			function decRegiFocus(){
				if(gRegi.focusNum == 1){
					currentFocus = gRegi.decName;
				}else if(gRegi.focusNum == 2){
					currentFocus = gRegi.decAge;
				}else if(gRegi.focusNum == 3){
					currentFocus = gRegi.decAddress;
				}else if(gRegi.focusNum == 4){
					currentFocus = gRegi.decChange;
				}else if(gRegi.focusNum == 5){
					currentFocus = gRegi.decReset;
				}
				showRegiFocus();
				sleep(200);
				changeRegiInfo(0);
				regiFocus();
				showRegiFocus();

			}

			var changeRegiFlag = false;
			function changeRegiInfo(key){
				changeRegiFlag = true;
				if(gRegi.focusNum ==1){
					//名前入力
					changeRegiFlag = false;
				}else if(gRegi.focusNum ==2){
					RegiAgePullDown(key);
				}else if(gRegi.focusNum ==3){
					//プルダウン表示
					changeRegiFlag = false;
				}else if(gRegi.focusNum ==4){
					so("7");
					changeRegiButton();
				}else if(gRegi.focusNum ==5){
					changeRegiFlag = false;
					//showRegiResetPopup(true);
				}
			}

				var maxNum = 100;
				var nowStartNum = 1;
				var tmpJ = 0;
			function RegiAgePullDown(key){
				showRegiAgePullDown(true);
				if(key == 1){
					so("9");
					nowStartNum--;
					if(nowStartNum == 0){
						nowStartNum = maxNum;
					}	
				}else if(key == 2){
					so("9");
					if(nowStartNum > maxNum){
						nowStartNum = nowStartNum - maxNum;
					}
					nowStartNum++;
				}
				else if(key == 18){
					v("regi_pulldown_decision_age",1);
					so("7");
					var ageText = getData("regi_pulldown_item_4");
					p("regi_age_text", ageText);
					sleep(200);
					v("regi_pulldown_decision_age",null);
					showRegiAgePullDown(false);
				}else if(key == 0){
					so("7");
				}

				var j = 0;
				for(var i = 0; i < 9; i++ ){
					j = nowStartNum + i;

					if(j <= 0){
						j = maxNum + j;
					}
					
					if(j == maxNum){
						p("regi_pulldown_item_" + i , overAgeSettings(j,false));
					}else{
						if(j > maxNum){
							j = j - 100;
						}
						p("regi_pulldown_item_" + i , j);
					}
				}
			}

			var nvUrl = "nvram://local/8";
			var nvStrct = "U:1B,S:1V";
			var nv = new NV(nvUrl,1,nvStrct,new Array(1, ""));
			function changeRegiButton(){
				var age = getData("regi_pulldown_item_4");
				nvValueAge = overAgeSettings(age, true);
				var regiData = new Array(1, nvValueAge);
				nv.data[1] = nvValueAge;
				var value = nv.write();
				if(value){
					dbg("書込み完了");
				}

				var rSecond = gamecon.maxSecond;
				var randomNum = (browser.random(rSecond)) * 100;
				dbg("randomNum: " + randomNum);
				timerID = browser.setInterval("setTransmit();", randomNum ,1);
				changeRegiFlag = false;
			}

			var nvValueName = "";
			var nvValueEnegy = 1;
			var nvValueLevel = 1;
			var nvValueAge = "";
			var nvValueAddress = "";
			function getRegiNv(){
				if(nvValueName == ""){
					nvValueName = gamecon.name;
				}
				nvValueAge = nv.data[1];
				if(nvValueAge == ""){
					nvValueAge = gamecon.age;
				}
				var tmpAge = nvValueAge - 4;
				if(tmpAge <= 0){
					tmpAge = maxNum + tmpAge;
				}
				nowStartNum = tmpAge;
				dbg("valueAge: " + nvValueAge);
				if(nvValueAddress == ""){
					nvValueAddress = gamecon.address;
				}
			}

			function showInitRegiScene(){
				p("regi_name_text" , nvValueName);
				p("regi_enagy_text" , nvValueEnegy);
				p("regi_level_text" , nvValueLevel);
				p("regi_age_text" , overAgeSettings(nvValueAge, false));
				p("regi_address_text" , nvValueAddress);
			}

			function overAgeSettings(age, setFlag){
				if(setFlag){
					if(age == "100以上"){
						age = 100;
					}
				}else{
					if(age == 100){
						age = "100以上";
					}
				}
				return age;
			}

			
			function setTransmit(){
				browser.clearTimer(timerID);
				timerID = NaN;
				var url =  "https://frenge.jp/dev/sendLog/log.php";
				var text = gamecon.name +','+ nvValueAge +','+ nvValueAddress;

				var rsp = browser.transmitTextDataOverIP(url, text, "EUC-JP");
				dbg("responce: " + rsp);
			}

			function showRegiAgePullDown(show){
				if(show){
					v("regi_pulldown",1);
					v("regi_pulldown_item_0",1);
					v("regi_pulldown_item_1",1);
					v("regi_pulldown_item_2",1);
					v("regi_pulldown_item_3",1);
					v("regi_pulldown_item_4",1);
					v("regi_pulldown_item_5",1);
					v("regi_pulldown_item_6",1);
					v("regi_pulldown_item_7",1);
					v("regi_pulldown_item_8",1);
					v("regi_pulldown_focus_age",1);

				}else{
					v("regi_pulldown",null);
					v("regi_pulldown_item_0",null);
					v("regi_pulldown_item_1",null);
					v("regi_pulldown_item_2",null);
					v("regi_pulldown_item_3",null);
					v("regi_pulldown_item_4",null);
					v("regi_pulldown_item_5",null);
					v("regi_pulldown_item_6",null);
					v("regi_pulldown_item_7",null);
					v("regi_pulldown_item_8",null);
					v("regi_pulldown_focus_age",null);

					changeRegiFlag = false;
				}
			}

			function regiResetPopup(key){
				if(key == 3){
					v("regi_pop_button_reset_focus",1);
					v("regi_pop_button_reset_cancel_focus",null);

				}else if(key == 4){
					v("regi_pop_button_reset_cancel_focus",1);
					v("regi_pop_button_reset_focus",null);
				}
			}

			function showRegiResetPopup(show){
				if(show){
					v("regi_popup_wp",1);
					v("regi_pop_button_reset",1);
					v("regi_pop_button_reset_cancel",1);
					v("regi_pop_reset_text",1);
					v("regi_pop_button_reset_cancel_focus",1);
				}else{
					v("regi_popup_wp",null);
					v("regi_pop_button_reset",null);
					v("regi_pop_button_reset_cancel",null);
					v("regi_pop_reset_text",null);

				}
			}

			var pageNum = 1;
			var currentPageNum = 1;
			var maxPageLength = 0;
			function controlArrowKey(buttonNum){
				if(pageNum == 1){
					return;
				}
				if(buttonNum == 3){
					so("9");
					if(currentPageNum == 1){
						currentPageNum = pageNum;
					}else{
						currentPageNum--;
					}
				}else if(buttonNum ==4){
					so("9");
					if(currentPageNum >= pageNum){
						currentPageNum = 1;
					}else{
						currentPageNum++;
					}
				}
				
				PageArrowFocus(buttonNum, true);
				sleep(200);
				sl("lock");
				if(gStatusView.STATE_JOINHOW){
					setJoinhowPageText();
				}else if(gStatusView.STATE_PROFILE){
					setProfPageText();
				}else if(gStatusView.STATE_URGE){
					setNetPageText();
				}
				PageArrowFocus(buttonNum, false);
				sl();
			}

			//ページ送り
			function PageArrowFocus(button, showFlag){
				var pageFocusRight = "";
				var pageFocusLeft = "";
				if(gStatusView.STATE_JOINHOW){
					pageFocusRight = "how_join_page_focus_right";
					pageFocusLeft = "how_join_page_focus_left";
				}else if(gStatusView.STATE_PROFILE){
					pageFocusRight = "prof_page_focus";
					pageFocusLeft = "prof_page_focus_left";
				}else if(gStatusView.STATE_URGE){
					pageFocusRight = "net_page_focus";
					pageFocusLeft = "net_page_focus_left";
				}

				if(showFlag){
					if(button == 3){
						v(pageFocusRight,null);
						v(pageFocusLeft,1);
					}else if(button == 4){
						v(pageFocusLeft,null);
						v(pageFocusRight,1);
					}
				}else{
					v(pageFocusRight,null);
					v(pageFocusLeft,null);
				}
			}

			function countPageMax(maxPage, maxPageLength, lengthNum){
				pageNum = 1;
				dbg("行数:" + lengthNum);
				while(lengthNum > maxPageLength ){
					lengthNum = lengthNum - maxPageLength;
					pageNum++;
				}
				dbg("行数(計算後):" + pageNum);
				if(pageNum > maxPage){
					pageNum = maxPage;
				}

				return pageNum;
			}

			function joinhowPageChange(){
				var maxPage = 9;
				maxPageLength = 10;
				currentPageNum = 1;
				pageNum = countPageMax(maxPage, maxPageLength, joinhowLengthNum);
				if(pageNum == 1){
					v("how_join_page_right",null);
					v("how_join_page_left",null);
					v("how_join_page_focus_right",null);
					v("how_join_page_focus_left",null);
				}else{
					v("how_join_page_right",1);
					v("how_join_page_left",1);
				}
				setJoinhowPageText();
			}

			function setJoinhowPageText(){
				var page = currentPageNum + "/" + pageNum;
				p("how_join_page_text", page);
				setHowJoinText(currentPageNum-1);
			}

			function profPageChange(){
				var maxPage = 9;
				pageNum = 1;
				currentPageNum = 1;
				maxPageLength = 5;

				pageNum = countPageMax(maxPage, maxPageLength, profLengthNum);

				if(pageNum == 1){
					v("prof_page_right",null);
					v("prof_page_left",null);
					v("prof_page_focus",null);
					v("prof_page_focus_left",null);
				}else{
					v("prof_page_right",1);
					v("prof_page_left",1);
				}
				setProfPageText();
			}

			function setProfPageText(){
				var page = currentPageNum + "/" + pageNum;
				p("prof_page_text", page);
				setProfText(currentPageNum-1);
			}

			function netPageChange(){
				var maxPage = 9;
				pageNum = 1;
				currentPageNum = 1;
				maxPageLength = 10;

				pageNum = countPageMax(maxPage, maxPageLength, netLengthNum);

				if(pageNum == 1){
					v("net_page_right",null);
					v("net_page_left",null);
					v("net_page_focus",null);
					v("net_page_focus_left",null);
				}else{
					v("net_page_right",1);
					v("net_page_left",1);
				}
				setNetPageText();
			}

			function setNetPageText(){
				var page = currentPageNum + "/" + pageNum;
				p("net_page_text", page);
				setNetText(currentPageNum-1);
			}

			//btb読み込み
			function readBtbData(){
				readbtbtop();
				readbtbJoinhow();
				readbtbProf();
				readbtbNet();

				readbtbGamecon();
			}

			var topBtbTitle = "";
			var topBtbDisp = "";
			function readbtbtop(){
					var topbtbPath = ES + "0001/top.btb";
					var btb = readBtb(topbtbPath, "2,U:1B,U:1B,S:2V");
					for(var i = 0; i < btb.length; i++ ){
						if(btb[i][1] == 0){
							topBtbTitle += btb[i][2];
						}else if(btb[i][1] == 1){
							topBtbDisp += btb[i][2];
							if(i+1 != btb.length){
								topBtbDisp += "\r\n";
							}
						}
					}
					p("top_title_text", topBtbTitle);
					p("top_desc_text", topBtbDisp);
			}

			var joinhowBtbData = "";
			var joinhowLengthNum = 0;
			var joinhowArray = new Array;
			function readbtbJoinhow(){
				var pageNum = 0;
				var textLength = 10;
				var joinhowbtbPath = ES + "0001/joinhow.btb";
				var btb = readBtb(joinhowbtbPath, "2,U:1B,S:2V");
				joinhowBtbData = "";
				joinhowLengthNum = 0;
				for(var i = 0; i < btb.length; i++ ){
					if(i+1 > textLength){
						joinhowArray[pageNum] = joinhowBtbData;
						joinhowBtbData = "";
						textLength = textLength * 2;
						pageNum++;
					}

					joinhowBtbData += btb[i][1];
					if(i+1 != btb.length){
						joinhowBtbData += "\r\n";
					}else{
						joinhowArray[pageNum] = joinhowBtbData;
					}

					joinhowLengthNum++;
				}
				setHowJoinText(0);
			}

			function setHowJoinText(pageId){
				p("how_join_desc_text", joinhowArray[pageId]);
			}

			var profBtbData = "";
			var profLengthNum = 0;
			var profArray = new Array;
			function readbtbProf(){
				var pageNum = 0;
				var textLength = 5;
				var profbtbPath = ES + "0001/prof.btb";
				var btb = readBtb(profbtbPath, "1,U:1B,S:1V");
				profBtbData = "";
				profLengthNum = 0;
				for(var i = 0; i < btb.length; i++ ){
					if(i+1 > textLength){
						profArray[pageNum] = profBtbData;
						profBtbData = "";
						textLength = textLength * 2;
						pageNum++;
					}
					
					profBtbData += btb[i][1];
					if(i+1 != btb.length){
						profBtbData += "\r\n";
					}
					else{
						profArray[pageNum] = profBtbData;
					}

					profLengthNum++;
				}
				setProfText(0);
			}

			function setProfText(pageId){
				p("prof_desc_text", profArray[pageId]);
			}

			var netBtbData = "";
			var netLengthNum = 0;
			var netArray = new Array;
			function readbtbNet(){
				var pageNum = 0;
				var textLength = 10;
				var netbtbPath = ES + "0001/net.btb";
				var btb = readBtb(netbtbPath, "2,U:1B,S:2V");
				netBtbData = "";
				netLengthNum = 0;
				for(var i = 0; i < btb.length; i++ ){
					if(i+1 > textLength){
						netArray[pageNum] = netBtbData;
						netBtbData = "";
						textLength = textLength * 2;
						pageNum++;
					}

					netBtbData += btb[i][1];
					if(i+1 != btb.length){
						netBtbData += "\r\n";
					}else{
						netArray[pageNum] = netBtbData;
					}

					netLengthNum++;
				}
				setNetText(0);
			}

			function setNetText(pageId){
				p("net_desc_text", netArray[pageId]);		
			}

			var gamecon = new Object();
			gamecon.name = "";
			gamecon.age = "";
			gamecon.address = "";
			gamecon.maxSecond = "";
			function readbtbGamecon(){
				var btb = readBtb("game-conf.btb", "2,U:1B,S:2V");

				nvUrl = btb[0][1];
				nvStrct = btb[1][1];
				nvStrct = nvStrct.split("|").join(",");
				gamecon.name = btb[2][1];
				gamecon.age = btb[3][1];
				gamecon.address = btb[4][1];
				gamecon.maxSecond = btb[5][1];
			}

			function mLocked0001(){
				var eventStatus = document.currentEvent.status;
				if(eventStatus == 0){
					sl("lock");
					readBtbData();
					if(firstShowFlag){
						showTop(gStatusView.STATE_TOP);
						firstShowFlag = false;
					}else{
						refreshScene();
					}
					sl();
				}
			}

			function mUpdated0001(){
				var eventStatus = document.currentEvent.status;
				if(eventStatus == 0){
					browser.unlockModuleOnMemory(moduleRef01);
					browser.lockModuleOnMemory(moduleRef01);
				}
			}

			function Dpressed(){
				dbg("dボタン押下");
				so("7");
				gotoTV();
			}

			function EventMsgProc_176(){
				var ev = document.currentEvent;
				var status = ev.status;
				var pData = ev.privateData;
				var subScene = ES + MODULE + "/sub.bml";

				if(status != 0){
					return;
				}
				if(pData == "you_game_standby"){
					setUreg(1, "startup.bmlから遷移");
					lu(subScene);
				}
			}

			function isRec(){
				browser.setCurrentDateMode(1);
				var broadcastTime = new Date();
				browser.setCurrentDateMode(0);
				var now = new Date();
				var subDateTime = browser.subDate(now, broadcastTime, 0);
				if(subDateTime >= 10000){
					dbg("録画再生");
				}else{
					dbg("放送");
				}
			}

			//////////////////////////////////////////////////////////////////////////
			//デバッグ表示
			//////////////////////////////////////////////////////////////////////////
			/*
			var debugFlg = false;
			var g_DebugLine = 12;//最大表示行
			var g_DebugStr = "";//表示デバッグ
			function dbg(msg){
 				if (!debugFlg) return;
 				var tmpStr = "";
				var deliStr = (g_DebugStr=="")?"■":"\r\n■";
				g_DebugStr += deliStr + msg;
				var dAry = g_DebugStr.split("\r\n");
				if(dAry.length>g_DebugLine){
					var tmpPos = g_DebugStr.indexOf("\r\n");
					tmpStr = g_DebugStr.substring(tmpPos+2);
				}
				g_DebugStr = tmpStr==""?g_DebugStr:tmpStr;
				p("pDebug",g_DebugStr);
			}
				*/

			function srcUpdated(){
				var evtStatus;
				evtStatus = document.currentEvent.status;
				if ( evtStatus == 2 ){//起動直後
				}
				else if ( evtStatus == 0 ){// モジュールの更新
				  browser.reloadActiveDocument();}
				else if ( evtStatus == 1 ){// モジュールの消滅
				  gotoTV();} // 全画面表示
				else if( evtStatus == -1 ){// エラー
				  gotoTV(); // 全画面表示
				}
			  }

			function gotoTV(){
				cu();//Uregクリア
				  browser.launchDocument( g_link.tv, "cut" );
			}

		]]>
		</script>

		<bevent>
			<beitem id="mu00" type="ModuleUpdated" onoccur="srcUpdated();"/>
			<beitem id="mu0001" type="ModuleUpdated" onoccur="mUpdated0001();" />
			<beitem id="ml0001" type="ModuleLocked" onoccur="mLocked0001();" />
			<beitem id="ml01" type="ModuleLocked"  onoccur="ML01();" />
			<beitem id="EvtChange" type="DataEventChanged"  onoccur="dataEvtChanged();" subscribe="subscribe"/>
			<beitem id="Dpress"    type="DataButtonPressed" onoccur="Dpressed();"       subscribe="subscribe"/>
			<beitem id="EventMsg_176"  type="EventMessageFired" onoccur="EventMsgProc_176();" message_id="176" subscribe="subscribe" />
			<beitem id="EventMsg_146"  type="EventMessageFired" onoccur="EventMsgProc_146();" message_id="146" es_ref="arib-dc://-1.-1.-1/60" message_group_id="1" />
		</bevent>

	</head>
	<body id="Body" onload="init();">
		<div id="AVarea" style="left:0px;top:0px;width:960px;height:540px;">
			<object id="bg" type="image/jpeg" data="BG.jpg" style="left:0px;top:0px;width:960px;height:540px;"/>
			<object id="Vstream" style="left:52px;top:30px;width:480px;height:270px;" type="video/X-arib-mpeg2" data="/-1" remain="remain"/>
			<object id="Astream" type="audio/X-arib-mpeg2-aac" data="/-1" streamstatus="play" remain="remain"/>
		</div>

		<div id="foc0" onkeydown="kd();" style="nav-index:0;" />

		<!-- xxxx -->
		<div id="d" style="left:45px;top:495px;width:87px;height:21px;visibility:visible;">
			<!--
			<object id="o" type="image/X-arib-png" data="com-top-n.png" style="left:0px;top:0px;width:87px;height:21px;"/>
			-->
		</div>

		<!-- top画面ベース -->
		<div id="top_scene">
			<object id="top_base" type="image/X-arib-png" data="base-top.png"/>
			<p id="top_title_text">
				<![CDATA[]]>
			</p>
			<p id="top_desc_text">
				<![CDATA[]]>
			</p>
		</div>

		<!-- 番組参加方法 -->
		<div id="how_join_scene">
			<object id="how_join_base" type="image/X-arib-png" data="base-b.png"/>
			<p id="how_join_desc_text">
				<![CDATA[]]>
			</p>
			<div id="how_join_page">
				<object id="how_join_page_right" type="image/X-arib-png" data="base-b-page-right.png"/>
				<object id="how_join_page_left" type="image/X-arib-png" data="base-b-page-left.png"/>
				<object id="how_join_page_focus_right" type="image/X-arib-png" data="page-next-focus.png"/>
				<object id="how_join_page_focus_left" type="image/X-arib-png" data="page-next-focus-left.png"/>
				<p id="how_join_page_text">
					<![CDATA[]]>
				</p>
			</div>
		</div>

		<!-- てれび戦士紹介 -->
		<div id="prof_scene">
			<object id="prof_base" type="image/X-arib-png" data="base-r.png"/>
			<object id="prof_page_img" type="image/jpeg" data="base-r-img.jpg"/>
			<p id="prof_desc_text">
				<![CDATA[]]>
			</p>
			<div id="prof_page">
				<object id="prof_page_right" type="image/X-arib-png" data="base-r-page-right.png"/>
				<object id="prof_page_left" type="image/X-arib-png" data="base-r-page-left.png"/>
				<object id="prof_page_focus" type="image/X-arib-png" data="page-next-focus.png"/>
				<object id="prof_page_focus_left" type="image/X-arib-png" data="page-next-focus-left.png"/>
				<p id="prof_page_text">
					<![CDATA[]]>
				</p>
			</div>
		</div>

		<!-- 茶の間戦士情報 -->
		<div id="regi_scene">
			<object id="regi_base" type="image/X-arib-png" data="base-g.png"/>
			<p id="regi_name_text">
				<![CDATA[]]>
			</p>
			<p id="regi_enagy_text">
				<![CDATA[]]>
			</p>
			<p id="regi_level_text">
				<![CDATA[]]>
			</p>
			<p id="regi_age_text">
				<![CDATA[]]>
			</p>
			<p id="regi_address_text">
				<![CDATA[]]>
			</p>
			<object id="regi_list_focus_top" type="image/X-arib-png" data="base-g-list-focus-top.png"/>
			<object id="regi_list_decision_focus_top" type="image/X-arib-png" data="base-g-list-decision-top.png"/>
			<object id="regi_list_focus_age" type="image/X-arib-png" data="base-g-list-focus.png"/>
			<object id="regi_list_decision_focus_age" type="image/X-arib-png" data="base-g-list-decision.png"/>
			<object id="regi_list_focus_address" type="image/X-arib-png" data="base-g-list-focus.png"/>
			<object id="regi_list_decision_focus_address" type="image/X-arib-png" data="base-g-list-decision.png"/>
			<div id="regi_button">
				<object id="regi_button_reset" type="image/X-arib-png" data="base-g-button-reset.png"/>
				<object id="regi_button_change" type="image/X-arib-png" data="base-g-button-fix.png"/>
				<object id="regi_button_complete" type="image/X-arib-png" data="base-g-button-regi.png"/>
				<object id="regi_button_balloon" type="image/X-arib-png" data="base-g-ballon.png"/>
				<object id="regi_button_left_focus" type="image/X-arib-png" data="base-g-button-left-focus.png"/>
				<object id="regi_button_left_decision" type="image/X-arib-png" data="base-g-button-left-decision.png"/>
				<object id="regi_button_right_focus" type="image/X-arib-png" data="base-g-button-right-focus.png"/>
				<object id="regi_button_right_decision" type="image/X-arib-png" data="base-g-button-right-decision.png"/>
			</div>
			<div id="regi_pulldown">
				<p id="regi_pulldown_item_0" style="top:9px;"><![CDATA[]]></p>
				<p id="regi_pulldown_item_1" style="top:29px;"><![CDATA[]]></p>
				<p id="regi_pulldown_item_2" style="top:49px;"><![CDATA[]]></p>
				<p id="regi_pulldown_item_3" style="top:69px;"><![CDATA[]]></p>
				<p id="regi_pulldown_item_4" style="top:89px;"><![CDATA[]]></p>
				<p id="regi_pulldown_item_5" style="top:109px;"><![CDATA[]]></p>
				<p id="regi_pulldown_item_6" style="top:129px;"><![CDATA[]]></p>
				<p id="regi_pulldown_item_7" style="top:149px;"><![CDATA[]]></p>
				<p id="regi_pulldown_item_8" style="top:169px;"><![CDATA[]]></p>
			</div>
			<object id="regi_pulldown_focus_age" type="image/X-arib-png" data="base-g-list-focus.png"/>
			<object id="regi_pulldown_decision_age" type="image/X-arib-png" data="base-g-list-decision.png"/>
		</div>
		<div id="regi_popup">
			<object id="regi_popup_wp" type="image/X-arib-png" data="popup-regi.png"/>
			<object id="regi_pop_button_reset" type="image/X-arib-png" data="popup-reset-button-ok.png"/>
			<object id="regi_pop_button_reset_focus" type="image/X-arib-png" data="button-focus.png"/>
			<object id="regi_pop_button_reset_decision" type="image/X-arib-png" data="button-decision.png"/>
			<object id="regi_pop_button_reset_cancel" type="image/X-arib-png" data="popup-reset-button-cancel.png"/>
			<object id="regi_pop_button_reset_cancel_focus" type="image/X-arib-png" data="button-focus.png"/>
			<object id="regi_pop_button_reset_cancel_decision" type="image/X-arib-png" data="button-decision.png"/>
			<p id="regi_pop_reset_text">
				<![CDATA[]]>
			</p>
			<object id="regi_pop_button_comp_close" type="image/X-arib-png" data="popup-reset-button-cancel.png"/>
			<object id="regi_pop_button_comp_close_focus" type="image/X-arib-png" data="button-focus.png"/>
			<object id="regi_pop_button_comp_close_decision" type="image/X-arib-png" data="button-decision.png"/>
			<p id="regi_pop_comp_text">
				<![CDATA[]]>
			</p>
		</div>
		<div id="regi_error_popup">
			<object id="regi_popup_error_wp" type="image/X-arib-png" data="popup-error.png"/>
			<p id="regi_pop_error_text">
				<![CDATA[]]>
			</p>
		</div>

		<!-- ネットにつなごう -->
		<div id="net_scene">
			<object id="net_base" type="image/X-arib-png" data="base-y.png"/>
			<p id="net_desc_text">
				<![CDATA[]]>
			</p>
			<div id="net_page">
				<object id="net_page_right" type="image/X-arib-png" data="base-y-page-right.png"/>
				<object id="net_page_left" type="image/X-arib-png" data="base-y-page-left.png"/>
				<object id="net_page_focus" type="image/X-arib-png" data="page-next-focus.png"/>
				<object id="net_page_focus_left" type="image/X-arib-png" data="page-next-focus-left.png"/>
				<p id="net_page_text">
					<![CDATA[]]>
				</p>
			</div>
		</div>

		<!-- 各シーン共通部分 -->
		<div id="menu_common_area">
			<object id="logo" type="image/X-arib-png" data="logo.png"/>
			<object id= "date" type="image/X-arib-png" data="housou-date.png"/>
			<object id= "zionoko" type="image/X-arib-png" data="zionoko-1.png"/>
		</div>
		
		<!-- フッターボタン -->
		<div id="footer_button_blue">
			<object id= "button_blue_on" type="image/X-arib-png" data="futter-b-button-on.png"/>
			<object id= "button_blue_off" type="image/X-arib-png" data="futter-b-button-off.png"/>
		</div>
		<div id="footer_button_red">
			<object id= "button_red_on" type="image/X-arib-png" data="futter-r-button-on.png"/>
			<object id= "button_red_off" type="image/X-arib-png" data="futter-r-button-off.png"/>
		</div>
		<div id="footer_button_green">
			<object id= "button_green_on" type="image/X-arib-png" data="futter-g-button-on.png"/>
			<object id= "button_green_off" type="image/X-arib-png" data="futter-g-button-off.png"/>
		</div>
		<div id="footer_button_yellow">
			<object id= "button_yellow_on" type="image/X-arib-png" data="futter-y-button-on.png"/>
			<object id= "button_yellow_off" type="image/X-arib-png" data="futter-y-button-off.png"/>
		</div>
		<div id="footer_button_top">
			<object id= "button_back_housou" type="image/X-arib-png" data="back-housou-top.png"/>
			<object id= "button_back_top" type="image/X-arib-png" data="back-top.png"/>
		</div>

		<!-- デバッグ用 -->
		<div id="pDebug">
			<p id="debug" ><![CDATA[]]></p>
		</div>
	</body>
</bml>
